{"ast":null,"code":"var _jsxFileName = \"/Users/subramani.p/Documents/Medimine/medimine-frontend/src/components/ResultsTable.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsTable = ({\n  documents,\n  onViewDetails,\n  isLoading\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Analysis History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading history...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"results-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Filename\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: documents.map(doc => {\n          var _doc$status;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"filename\",\n              children: doc.filename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status status-${(_doc$status = doc.status) === null || _doc$status === void 0 ? void 0 : _doc$status.toLowerCase()}`,\n                children: doc.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onViewDetails(doc),\n                disabled: doc.status !== 'Complete',\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)]\n          }, doc.documentId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultsTable","documents","onViewDetails","isLoading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doc","_doc$status","filename","status","toLowerCase","onClick","disabled","documentId","_c","$RefreshReg$"],"sources":["/Users/subramani.p/Documents/Medimine/medimine-frontend/src/components/ResultsTable.js"],"sourcesContent":["import React from 'react';\n\nconst ResultsTable = ({ documents, onViewDetails, isLoading }) => {\n    return (\n        <div className=\"results-table-container\">\n            <h2>Analysis History</h2>\n            {isLoading ? <p>Loading history...</p> :\n                <table className=\"results-table\">\n                    <thead>\n                        <tr>\n                            <th>Filename</th>\n                            <th>Status</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {documents.map((doc) => (\n                            <tr key={doc.documentId}>\n                                <td className=\"filename\">{doc.filename}</td>\n                                <td>\n                                    <span className={`status status-${doc.status?.toLowerCase()}`}>\n                                        {doc.status}\n                                    </span>\n                                </td>\n                                <td>\n                                    <button\n                                        onClick={() => onViewDetails(doc)}\n                                        disabled={doc.status !== 'Complete'}\n                                    >\n                                        View Details\n                                    </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            }\n        </div>\n    );\n};\n\nexport default ResultsTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}